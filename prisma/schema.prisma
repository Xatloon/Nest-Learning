generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  phone     String   @unique @db.VarChar()
  name      String   @db.VarChar()
  status    UserStatus   @default(ACTIVE)
  role      UserRole     @default(USER)
  isFirstLogin Boolean  @default(true) @map("is_first_login")
  
  projects  Project[]
  
  lastLogin DateTime? @map("last_login") @db.Timestamptz()
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
  
  @@map("users")
}

enum ProjectStatus {
  ENABLE
  DISABLE
}

enum ProjectType {
  PERSONAL
  TEAM
}

model Project {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique @db.VarChar()
  ownerId   String   @db.Uuid @map("owner_id")
  type      ProjectType @default(PERSONAL)
  status    ProjectStatus   @default(ENABLE)
  
  owner     User     @relation(fields: [ownerId], references: [id])
  tasks     Task[]
  tags      Tag[]    @relation("ProjectTags")
  
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
  
  @@map("projects")
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id        String   @id @default(uuid()) @db.Uuid
  projectId String   @db.Uuid @map("project_id")
  name      String   @db.VarChar()
  priority  TaskPriority @default(MEDIUM)
  status    TaskStatus   @default(PENDING)
  
  project   Project  @relation(fields: [projectId], references: [id])
  
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
  
  @@map("tasks")
}

model Tag {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique @db.VarChar()
  
  projects  Project[] @relation("ProjectTags")
  
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
  
  @@map("tags")
}
